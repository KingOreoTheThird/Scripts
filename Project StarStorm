local u1 = {
    ["Convert_Stats"] = {
        ["ODM_Damage"] = true,
        ["ODM_Speed"] = true,
        ["ODM_Range"] = true,
        ["ODM_Gas"] = true,
        ["Shifter_Damage"] = true,
        ["TS_Damage"] = true,
        ["TS_Speed"] = true,
        ["TS_Range"] = true,
        ["TS_Gas"] = true,
        ["Blast_Radius"] = true
    },
    ["All_Stats"] = {
        ["ODM_Damage"] = true,
        ["Crit_Damage"] = true,
        ["Crit_Chance"] = true,
        ["ODM_Control"] = true,
        ["ODM_Range"] = true,
        ["ODM_Speed"] = true,
        ["ODM_Gas"] = true,
        ["Blade_Durability"] = true
    },
    ["Round"] = {
        "Extra",
        "Ignore",
        "Shift",
        "Strike",
        "Spear_Count"
    },
    ["IDs"] = {
        ["Skip_Roll"] = 268078317,
        ["Advanced_Customisation"] = 268078688,
        ["VIP_Server"] = 268078994,
        ["Loadouts"] = 268079135,
        ["Serum_Bag"] = 268079222,
        ["Family_Bag"] = 268079397,
        ["Dual_Cosmetic"] = 766879271,
        ["Extra_Drop"] = 841188828,
        ["Memory_Bag"] = 1019110431,
        ["Auto_Sell"] = 1018742141
    },
    ["Original_Stats"] = {
        ["TS_Damage"] = "ODM_Damage",
        ["TS_Control"] = "ODM_Control",
        ["TS_Gas"] = "ODM_Gas",
        ["TS_Speed"] = "ODM_Speed",
        ["TS_Range"] = "ODM_Range",
        ["Conservation_Chance"] = "Blade_Durability",
        ["Blast_Radius"] = "Swing_Duration"
    }
}
local function u9(p2, p3, p4) --[[Anonymous function at line 32]]
    if p4 == nil then
        local v5 = p2.Services
        local v6 = p2.Modules
        if v5.RS:IsServer() == true then
            local _, v7 = v6.Data.Get(p2, p3)
            return v7
        end
        local v8
        v8, p4 = v6.Update.Get_Data(p2, true)
    end
    return p4
end
function u1.Prompt_Gamepass(p10, p11, p12) --[[Anonymous function at line 59]]
    --[[
    Upvalues:
        [1] = u1
    --]]
    p10.Services.MPS:PromptGamePassPurchase(p11, u1.IDs[p12])
end
function u1.Get_Potential(p13, p14, p15) --[[Anonymous function at line 69]]
    --[[
    Upvalues:
        [1] = u9
    --]]
    task.desynchronize()
    local v16 = u9(p13, p14, p15)
    if v16 ~= nil then
        local v17 = 0
        local v18 = 0
        for _, v19 in pairs(v16.Upgrades[v16.Weapon]) do
            v17 = v17 + v19
            v18 = v18 + 1
        end
        local v20 = v18 == 0 and 1 or v18
        task.synchronize()
        local v21 = v17 / v20
        return math.floor(v21)
    end
    task.synchronize()
end
function u1.Get_Skill_Points(p22, p23, p24) --[[Anonymous function at line 91]]
    --[[
    Upvalues:
        [1] = u9
    --]]
    task.desynchronize()
    local v25 = p22.Modules
    local v26 = v25.Skills
    local _ = v25.Values
    local v27 = u9(p22, p23, p24)
    if v27 ~= nil then
        local v28 = v27.Progression.Level
        for _, v29 in pairs(v27.Skills.Unlocked) do
            v28 = v28 - v26[v29].Skill_Cost
        end
        task.synchronize()
        return v28
    end
    task.synchronize()
end
function u1.Get_Stat_Total(p30, p31, p32, p33, p34, p35, p36, p37) --[[Anonymous function at line 117]]
    --[[
    Upvalues:
        [1] = u9
        [2] = u1
    --]]
    task.desynchronize()
    local v38 = p30.Modules
    local v39 = v38.Equipment
    local v40 = v38.Perks
    local v41 = v38.Values
    local v42 = u9(p30, p31, p32)
    if v42 == nil then
        task.synchronize()
        return
    end
    if p34 == nil or not p34 then
        p34 = nil
    end
    local v43 = v42.Weapon
    local v44, v45
    if p33 == "Shifter_Damage" then
        v44 = v43 == "Spears" and "TS_Damage" or "ODM_Damage"
        local v46 = v41.Upgrade_Values.ODM_Damage
        local v47 = v42.Upgrades[v43][v44] + 1
        local v48 = v39.Maximum_Upgrades + 1
        v45 = v46[math.clamp(v47, 0, v48)]
    else
        local v49 = v42.Upgrades[v43][p33]
        if p34 == nil and v49 ~= nil then
            local v50 = v49 + 1
            local v51 = v39.Maximum_Upgrades + 1
            p34 = math.clamp(v50, 0, v51)
        end
        if p34 == nil then
            v45 = (p33 == "Health" or p33 == "Swing_Duration") and 100 or (p33 == "Health_Regen" and 1 or (p33 == "Spear_Count" and 2 or 0))
            v44 = p33
        else
            v45 = v41.Upgrade_Values[p33][p34]
            v44 = p33
        end
    end
    if v45 == nil then
        print(p33 .. " has no base stat!")
    else
        local v52 = v41.Skill_Values[v44]
        local v53
        if v52 == nil then
            v53 = v45
        else
            v53 = v45
            for v54, v55 in pairs(v52) do
                if table.find(v42.Skills.Unlocked, v54) ~= nil or v54 == p35 then
                    if v44 == "ODM_Damage" or v44 == "TS_Damage" then
                        local v56 = v53 + v45 * (v55 / 100)
                        v53 = math.floor(v56)
                    else
                        v53 = v53 + v55
                    end
                end
            end
        end
        local v57 = v41.Family_Values[v44]
        if v57 ~= nil then
            local v58 = v57[v42.Avatar.Family]
            if v58 ~= nil then
                if u1.Convert_Stats[v44] == nil then
                    v53 = v53 + v58
                else
                    local v59 = v53 + v45 * (v58 / 100)
                    v53 = math.floor(v59)
                end
            end
        end
        if p33 == "Skill_Cooldown_Reduction" and table.find(v42.Talents, "13") ~= nil then
            v53 = v53 + 10
        end
        local v60 = u1.Original_Stats[p33]
        local v61
        if v60 == nil then
            v60 = p33
            v61 = 1
        else
            v61 = v41.Alternate_Stats[v60].Ratio
        end
        local v62 = v42.Perks.Equipped
        local v63 = 0
        local v64 = nil
        local v65 = nil
        local v66 = 0
        for _, v67 in pairs(v62) do
            local v68 = v42.Perks.Storage[v67]
            if v68 ~= nil then
                local v69 = v68.Name
                for _, v70 in pairs(v40) do
                    local v71 = v70[v69]
                    if v71 ~= nil then
                        local v72 = v71.Reduce
                        local v73 = v71.Stats
                        if v72 ~= nil then
                            local v74 = v72[v60]
                            if v74 ~= nil then
                                local v75 = v74.Base
                                local v76 = v74.Increment
                                v63 = v63 + (v75 + v68.Level * v76) * v61
                            end
                        end
                        if v73 ~= nil then
                            for v77, v78 in pairs(v71.Stats) do
                                if (v60 == v77 or p33 == v77 and v43 == "Spears" or (v77 == "All" or v77 == "TS_All") and (u1.All_Stats[v60] == true or v60 == "Blast_Radius") or v77 == "All_2" and v60 == "Shifter_Damage") and (v77 ~= "TS_All" or v43 == "Spears") then
                                    local v79 = (v77 == "TS_All" or p33 == v77 and v43 == "Spears") and 1 or v61
                                    local v80 = v78.Max
                                    local v81 = v78.Multiplier
                                    local v82 = v78.Base
                                    local v83 = v78.Increment
                                    if v80 == true then
                                        local v84 = (v82 + v68.Level * v83) * v79
                                        if v64 == nil or v84 < v64 then
                                            v64 = v84
                                        end
                                    elseif v81 == true then
                                        local v85 = (v82 + v68.Level * v83) * v79
                                        v65 = v65 == nil and v85 and v85 or v65 * v85
                                    elseif v82 == nil and v83 == nil then
                                        for v86, _ in pairs(v78) do
                                            v66 = v66 + u1.Get_Stat_Total(p30, p31, v42, v86, nil, p35, true) * v79
                                            task.desynchronize()
                                        end
                                    else
                                        v66 = v66 + (v82 + v68.Level * v83) * v79
                                    end
                                end
                            end
                        end
                        break
                    end
                end
            end
        end
        local v87 = v42.Artifacts.Equipped
        local v88 = 0
        for _, v89 in pairs(v87) do
            local v90 = v42.Artifacts.Storage[v89.ID]
            if v90 ~= nil then
                for _, v91 in pairs(v90.Stats) do
                    if v60 == v41.Rollable[v91.Index].Stat then
                        if u1.Convert_Stats[v60] == nil then
                            v88 = v88 + v91.Value / 10 * v61
                        else
                            local v92 = v88 + v45 * (v91.Value / 1000) * v61
                            v88 = math.floor(v92)
                        end
                    end
                end
                if v90.Name == "Lantern" and (v60 == "ODM_Damage" or v60 == "TS_Damage") then
                    local v93 = v88 + v45 * 0.1 * v61
                    v88 = math.floor(v93)
                elseif v90.Name == "Scars" and v60 == "Shifter_Damage" then
                    local v94 = v88 + v45 * 0.15 * v61
                    v88 = math.floor(v94)
                end
            end
        end
        if p37 == "Artifacts" then
            task.synchronize()
            return v88
        end
        local v95 = v53 + v88
        local v96
        if u1.Convert_Stats[p33] == nil then
            v96 = v95 + v66
        else
            local v97 = v95 + v45 * (v66 / 100)
            v96 = math.floor(v97)
        end
        if v65 ~= nil then
            v96 = v96 * v65
        end
        if v63 > 0 then
            local v98 = v63 / 100 * v96
            local v99 = math.floor(v98)
            if p36 == true then
                task.synchronize()
                return v99
            end
            v96 = v96 - v99
        end
        if v64 == nil then
            v64 = v96
        end
        if p37 == "Perks" then
            task.synchronize()
            return v64 - v95
        end
        v45 = v64
    end
    if p33 == "Strike" and v43 == "Spears" then
        v45 = v45 / 2
    end
    local v100 = string.format
    local v101 = tonumber(v100("%.1f", v45))
    if table.find(u1.Round, p33) ~= nil then
        v101 = math.floor(v101)
    end
    task.synchronize()
    return v101
end
function u1.Get_Perk_Total(p102, p103, p104, p105, p106) --[[Anonymous function at line 366]]
    --[[
    Upvalues:
        [1] = u1
        [2] = u9
    --]]
    if p106 == nil then
        return
    end
    task.desynchronize()
    local v107 = 0
    local v108 = 0
    local v109 = p102.Modules
    local v110 = v109.Perk
    local v111 = v109.Values
    local v112 = u1.Get_Perk_Rarity(p102, p106.Name)
    local v113 = v111.Perk_Level_XP[v112]
    local v114 = u9(p102, p103, p104)
    if v114 ~= nil then
        local v115 = 0
        for v116 = 0, #v113 do
            if p106.Level < v116 and v116 > 0 then
                local v117 = v113[math.clamp(v116, 1, 10)]
                if p106.Level == v116 then
                    v117 = v117 - p106.XP
                end
                v115 = v115 + v117
            end
        end
        for _, v118 in pairs(p105) do
            local v119 = v114.Perks.Storage[v118]
            if v119 ~= nil then
                local v120 = v110.Get_Rarity_And_Type(p102, v119.Name)
                if v120 ~= nil then
                    v107 = v107 + v111.Perk_XP[v120]
                    if v119.Level > 0 then
                        local v121 = v111.Perk_Level_XP[v120]
                        for v122 = 1, v119.Level do
                            local v123 = v107 + v121[math.clamp(v122, 1, 10)] * 0.75
                            v107 = math.floor(v123)
                        end
                    end
                end
            end
        end
        v107 = math.clamp(v107, 0, v115)
        local v124 = p106.Level
        local v125 = p106.XP + v107
        if v124 < #v113 then
            for v126 = v124, #v113 do
                if v126 >= #v113 then
                    break
                end
                local v127 = v126 + 1
                local v128 = v113[math.clamp(v127, 1, 10)]
                if v128 > v125 then
                    break
                end
                v108 = v108 + 1
                v125 = v125 - v128
            end
        end
    end
    local v129 = v107 * 20
    task.synchronize()
    return v112, v107, v129, v108
end
function u1.Get_Craft_Chance(p130, p131, p132, p133, p134) --[[Anonymous function at line 454]]
    --[[
    Upvalues:
        [1] = u9
    --]]
    task.desynchronize()
    local v135 = 0
    local v136 = 0
    local v137 = p130.Modules
    local v138 = v137.Perk
    local v139 = v137.Values
    local v140 = v139.Craft_Chances[p134]
    local v141 = v139.Craft_Costs
    local v142 = u9(p130, p131, p132)
    if v142 ~= nil then
        for _, v143 in pairs(p133) do
            local v144 = v142.Perks.Storage[v143]
            if v144 ~= nil then
                local v145 = v138.Get_Rarity_And_Type(p130, v144.Name)
                if v145 ~= nil then
                    local v146 = 1 + v144.Level / 10 * 0.75
                    v135 = v135 + v140[v145] * v146
                    v136 = v136 + v141[v145] * v146
                end
            end
        end
    end
    local v147 = string.format
    local v148 = tonumber(v147("%.1f", v135))
    local v149 = v141[p134] / 100 * v148
    local v150 = math.floor(v149)
    task.synchronize()
    return v148, v150
end
function u1.Get_Perk_Rarity(p151, p152) --[[Anonymous function at line 494]]
    local v153 = p151.Modules.Perks
    for v154, v155 in pairs(v153) do
        for v156, _ in pairs(v155) do
            if p152 == v156 then
                return v154
            end
        end
    end
end
function u1.XP(p157, p158) --[[Anonymous function at line 508]]
    local v159 = 1 - p158 * 0.0023
    local v160 = 0
    for v161 = 1, p157 do
        local v162 = (v161 + 9) / 10
        local v163 = (v160 + math.floor(v162) * 100) * v159
        v160 = math.floor(v163)
    end
    return v160
end
function u1.Own_Gamepass(p164, u165, p166) --[[Anonymous function at line 520]]
    --[[
    Upvalues:
        [1] = u1
    --]]
    local u167 = p164.Services.MPS
    local v168 = u165:FindFirstChild("Gamepasses")
    local u169 = u1.IDs[p166]
    local u170 = false
    if v168 == nil then
        pcall(function() --[[Anonymous function at line 542]]
            --[[
            Upvalues:
                [1] = u170
                [2] = u167
                [3] = u165
                [4] = u169
            --]]
            u170 = u167:UserOwnsGamePassAsync(u165.UserId, u169)
        end)
    else
        local v171 = v168:FindFirstChild(p166)
        if v171 == nil then
            pcall(function() --[[Anonymous function at line 538]]
                --[[
                Upvalues:
                    [1] = u170
                    [2] = u167
                    [3] = u165
                    [4] = u169
                --]]
                u170 = u167:UserOwnsGamePassAsync(u165.UserId, u169)
            end)
        else
            u170 = v171.Value
        end
    end
    return u170
end
return u1
